

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (17 May 2021 21:18:23) as /Users/dbenitez/uba/1c2021-IS1/Quiz/macos64 - Portfolio 1/CuisUniversity-4532.image!


----End fileIn of /Users/dbenitez/uba/1c2021-IS1/IS1-TP-1c2021/17-Portfolio 1/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:19:16'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/17/2021 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/17/2021 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/17/2021 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/17/2021 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:19:16'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'DB 5/17/2021 21:20:30' prior: 50859548!
balance

	^transactions sum: [ :aTransaction | | value | 
			(aTransaction isKindOf: Withdraw) ifTrue: [ value := (aTransaction value)*(-1)].
		(aTransaction isKindOf: Deposit) ifTrue: [value := aTransaction value].
		
		value.
		
		
		aTransaction value ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:20:34'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'DB 5/17/2021 21:21:02' prior: 50859592!
balance

	^transactions sum: [ :aTransaction | | value | 
			(aTransaction isKindOf: Withdraw) ifTrue: [ value := (aTransaction value)*(-1)].
		(aTransaction isKindOf: Deposit) ifTrue: [value := aTransaction value].

		value. ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'DB 5/17/2021 21:21:11' prior: 50859608!
balance

	^transactions sum: [ :aTransaction | | value | 
		(aTransaction isKindOf: Withdraw) ifTrue: [ value := (aTransaction value)*(-1)].
		(aTransaction isKindOf: Deposit) ifTrue: [value := aTransaction value].
		value. 
	] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:21:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:21:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:21:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:21:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/17/2021 21:21:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/17/2021 21:21:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/17/2021 21:21:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/17/2021 21:21:14'!
PASSED!
!Deposit methodsFor: 'initialization' stamp: 'DB 5/17/2021 21:21:40'!
xxx: aBalance

	 ^aBalance + value! !
!Withdraw methodsFor: 'initialization' stamp: 'DB 5/17/2021 21:22:03'!
xxx: aBalance
	^aBalance - value! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'DB 5/17/2021 21:22:56' prior: 50859619!
balance

	|balance|
	balance := 0.
	transactions do: [:aTransaction |  balance := aTransaction xxx: balance].
	^balance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:23:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:23:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:23:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/17/2021 21:23:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/17/2021 21:23:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/17/2021 21:23:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/17/2021 21:23:00'!
PASSED!
!Deposit methodsFor: 'initialization' stamp: 'DB 5/17/2021 21:23:15'!
addTo: aBalance

	 ^aBalance + value! !

!methodRemoval: Deposit #xxx: stamp: 'DB 5/17/2021 21:23:15'!
xxx: aBalance

	 ^aBalance + value!
!Withdraw methodsFor: 'initialization' stamp: 'DB 5/17/2021 21:23:32'!
addTo: aBalance
	^aBalance - value! !

!methodRemoval: Withdraw #xxx: stamp: 'DB 5/17/2021 21:23:32'!
xxx: aBalance
	^aBalance - value!
!AccountTransaction methodsFor: 'value' stamp: 'DB 5/17/2021 21:23:41'!
addTo: Balance

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'DB 5/17/2021 21:23:56' prior: 50859667!
balance

	|balance|
	balance := 0.
	transactions do: [:aTransaction |  balance := aTransaction addTo: balance].
	^balance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:24:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:24:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:24:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/17/2021 21:24:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/17/2021 21:24:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/17/2021 21:24:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/17/2021 21:24:02'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
balance
	| balance |
	(balance _ 0 coverAll:
		{33 to: 33})
		cover: (22 to: 28)
		declaredAt: (12 to: 18).
	[
	(transactions
		cover: (37 to: 48)
		declaredAt: (37 to: 48)) do: [ :aTransaction |
		(balance _ [
		(aTransaction
			cover: (83 to: 94)
			declaredAt: (56 to: 67)) addTo:
			(balance
				cover: (72 to: 78)
				declaredAt: (12 to: 18)) ] valueCoveringAll:
			{96 to: 101})
			cover: (103 to: 109)
			declaredAt: (12 to: 18) ]] valueCoveringAll:
		{50 to: 52}.
	^ balance
		cover: (115 to: 121)
		declaredAt: (12 to: 18).! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:24:06'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalance
	^ [
	(aBalance
		cover: (21 to: 28)
		declaredAt: (8 to: 15)) +
		(value
			cover: (32 to: 36)
			declaredAt: (32 to: 36)) ] valueCoveringAll:
		{30 to: 30}.! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:24:06'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTo: aBalance
	^ [
	(aBalance
		cover: (19 to: 26)
		declaredAt: (8 to: 15)) -
		(value
			cover: (30 to: 34)
			declaredAt: (30 to: 34)) ] valueCoveringAll:
		{28 to: 28}.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:24:06'!
PASSED!
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/17/2021 21:24:06'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/17/2021 21:24:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/17/2021 21:24:06'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/17/2021 21:24:06'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'DB 5/17/2021 21:24:23'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'DB 5/17/2021 21:24:40'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'nil' stamp: 'DB 5/17/2021 21:24:34'!
test01PortfolioHaveZeroAsBalanceWhenCreated 

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:24:41'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:24:50'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:24:56' prior: 50859908!
balance
	^0! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:24:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:24:57'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:25:11'!
test02APortfolioWithAnAccountHasTheSameBalance

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolio add: account.

	self assert: 100 equals: (portfolio balance).
! !

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:25:12'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:25:19'!
add: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'DB 5/17/2021 21:25:39'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:25:37' prior: 50859937!
add: aReceptiveAccount 
	accounts add: aReceptiveAccount! !

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:25:41'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:26:01' overrides: 16896425!
initialize
	accounts := OrderedCollection new.! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:26:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:26:03'!
FAILURE!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:26:03'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:26:36' prior: 50859913!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty: [^0]! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:26:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:26:39'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:26:55'!
test03

	| portfolio child account |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 

	child add: account.	
	portfolio add: child.

	self assert: 100 equals: (portfolio balance).

! !

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 21:27:03'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:27:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:27:03'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 21:27:03'!
PASSED!

Object subclass: #Asset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'DB 5/17/2021 21:27:21'!
Object subclass: #Asset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Asset subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'DB 5/17/2021 21:27:26'!
Asset subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'DB 5/17/2021 21:27:31'!
Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:27:36'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:27:36'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 21:27:36'!
PASSED!
!Behavior method!
initialize
	(accounts _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (13 to: 20)
		declaredAt: (13 to: 20).! !
!Behavior method!
balance
	^ [
	(accounts
		cover: (11 to: 18)
		declaredAt: (11 to: 18))
		sum: [ :anAccount |
			[
			(anAccount
				cover: (39 to: 47)
				declaredAt: (27 to: 35)) balance ] valueCoveringAll:
				{49 to: 55} ]
		ifEmpty: [ ^ 0 coverAll:
				{69 to: 69} ]] valueCoveringAll:
		{20 to: 23. 58 to: 65}.! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:27:40'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aReceptiveAccount
	[
	(accounts
		cover: (26 to: 33)
		declaredAt: (26 to: 33)) add:
		(aReceptiveAccount
			cover: (40 to: 56)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{35 to: 38}.! !
!Behavior method!
balance
	| balance |
	(balance _ 0 coverAll:
		{33 to: 33})
		cover: (22 to: 28)
		declaredAt: (12 to: 18).
	[
	(transactions
		cover: (37 to: 48)
		declaredAt: (37 to: 48)) do: [ :aTransaction |
		(balance _ [
		(aTransaction
			cover: (83 to: 94)
			declaredAt: (56 to: 67)) addTo:
			(balance
				cover: (72 to: 78)
				declaredAt: (12 to: 18)) ] valueCoveringAll:
			{96 to: 101})
			cover: (103 to: 109)
			declaredAt: (12 to: 18) ]] valueCoveringAll:
		{50 to: 52}.
	^ balance
		cover: (115 to: 121)
		declaredAt: (12 to: 18).! !
!Behavior method!
addTo: aBalance
	^ [
	(aBalance
		cover: (21 to: 28)
		declaredAt: (8 to: 15)) +
		(value
			cover: (32 to: 36)
			declaredAt: (32 to: 36)) ] valueCoveringAll:
		{30 to: 30}.! !

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:27:40'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 21:27:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/17/2021 21:28:03'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:28:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:28:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 21:28:05'!
PASSED!
!Withdraw methodsFor: 'initialization' stamp: 'DB 5/17/2021 21:28:38' prior: 50859707 overrides: 50859714!
addTo: aBalance

	^aBalance - value! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:29:26' prior: 50859986!
test03

	| portfolio child account |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 

	child add: account.	
	portfolio add: child.

	self assert: 100 equals: (portfolio balance).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:37:24' prior: 50860196!
test03

	| portfolio child account |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 

	child add: account.	
	portfolio add: child.

	self assert: 100 equals: (portfolio balance).
	
	"0 one many altura del arbol"

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:37:44' prior: 50860208!
test03

	| portfolio child account |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 

	child add: account.	
	portfolio add: child.

	self assert: 100 equals: (portfolio balance).
	
	"0 one many altura del arbol
	"

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:39:01' prior: 50860221!
test03

	| portfolio child account |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 

	child add: account.	
	portfolio add: child.

	self assert: 100 equals: (portfolio balance).

! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:43:51' prior: 50859974!
balance
	^accounts sum: [:anAsset | anAsset balance] ifEmpty: [^0]! !
!Asset methodsFor: 'nil' stamp: 'DB 5/17/2021 21:44:20'!
balance
	self subclassResponsibility ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:50:38'!
test04EmptyPortfolioHaveNotAnyTransaction

	| portfolio child account |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account. 

	child add: account.	
	portfolio add: child.

	self assert: 100 equals: (portfolio balance).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:52:43' prior: 50860254!
test04EmptyPortfolioHaveNotAnyTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	self assert: 100 equals: (portfolio hasRegistered: deposit).

! !

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/17/2021 21:54:20'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:54:31'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:54:47' prior: 50860281!
hasRegistered: aDeposit 
	^false! !

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/17/2021 21:54:49'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:55:03' prior: 50860267!
test04EmptyPortfolioHaveNotAnyTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	self assert: (portfolio hasRegistered: deposit).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:55:29' prior: 50860294!
test04EmptyPortfolioHaveNotAnyTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	self deny: (portfolio hasRegistered: deposit).

! !

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/17/2021 21:55:30'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 21:55:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 21:55:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 21:55:30'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/17/2021 21:55:30'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:56:04'!
test05PortfolioWithAnReceptiveAccountHaveAccountTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	self deny: (portfolio hasRegistered: deposit).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:56:13' prior: 50860332!
test05PortfolioWithAnReceptiveAccountHaveAccountTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	portfolio add: account.

	self deny: (portfolio hasRegistered: deposit).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:56:21' prior: 50860344!
test05PortfolioWithAnReceptiveAccountHaveAccountTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	portfolio add: account.

	self assert: (portfolio hasRegistered: deposit).

! !

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/17/2021 21:56:23'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 21:59:37' prior: 50860286!
hasRegistered: aTransaction

	^accounts do: [:account | (account hasRegistered: aTransaction) ifTrue: [^true]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/17/2021 22:00:30' prior: 50860372!
hasRegistered: aTransaction

	^accounts anySatisfy: [:account | (account hasRegistered: aTransaction)].! !

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/17/2021 22:00:31'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 22:00:31'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 22:00:31'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 22:00:31'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/17/2021 22:00:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/17/2021 22:00:31'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/17/2021 22:00:40'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/17/2021 22:00:40'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/17/2021 22:00:40'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/17/2021 22:00:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/17/2021 22:00:40'!
PASSED!

----SNAPSHOT----(17 May 2021 22:11:08) CuisUniversity-4532.image priorSource: 16885703!

----QUIT----(17 May 2021 22:11:11) CuisUniversity-4532.image priorSource: 16920695!

----STARTUP---- (20 May 2021 19:51:25) as /Users/dbenitez/uba/1c2021-IS1/Quiz/macos64 - Portfolio 1/CuisUniversity-4532.image!

!Behavior method!
initialize
	(accounts _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (13 to: 20)
		declaredAt: (13 to: 20).! !
!Behavior method!
balance
	^ [
	(accounts
		cover: (11 to: 18)
		declaredAt: (11 to: 18))
		sum: [ :anAsset |
			[
			(anAsset
				cover: (37 to: 43)
				declaredAt: (27 to: 33)) balance ] valueCoveringAll:
				{45 to: 51} ]
		ifEmpty: [ ^ 0 coverAll:
				{65 to: 65} ]] valueCoveringAll:
		{20 to: 23. 54 to: 61}.! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:03:37'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aReceptiveAccount
	[
	(accounts
		cover: (26 to: 33)
		declaredAt: (26 to: 33)) add:
		(aReceptiveAccount
			cover: (40 to: 56)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{35 to: 38}.! !
!Behavior method!
balance
	| balance |
	(balance _ 0 coverAll:
		{33 to: 33})
		cover: (22 to: 28)
		declaredAt: (12 to: 18).
	[
	(transactions
		cover: (37 to: 48)
		declaredAt: (37 to: 48)) do: [ :aTransaction |
		(balance _ [
		(aTransaction
			cover: (83 to: 94)
			declaredAt: (56 to: 67)) addTo:
			(balance
				cover: (72 to: 78)
				declaredAt: (12 to: 18)) ] valueCoveringAll:
			{96 to: 101})
			cover: (103 to: 109)
			declaredAt: (12 to: 18) ]] valueCoveringAll:
		{50 to: 52}.
	^ balance
		cover: (115 to: 121)
		declaredAt: (12 to: 18).! !
!Behavior method!
addTo: aBalance
	^ [
	(aBalance
		cover: (21 to: 28)
		declaredAt: (8 to: 15)) +
		(value
			cover: (32 to: 36)
			declaredAt: (32 to: 36)) ] valueCoveringAll:
		{30 to: 30}.! !

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:03:37'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:03:37'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(accounts
		cover: (32 to: 39)
		declaredAt: (32 to: 39)) anySatisfy: [ :account |
		[
		(account
			cover: (66 to: 72)
			declaredAt: (55 to: 61)) hasRegistered:
			(aTransaction
				cover: (89 to: 100)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{74 to: 87} ]] valueCoveringAll:
		{41 to: 51}.! !

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:03:37'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:03:37'!
PASSED!
!Behavior method!
initialize
	(accounts _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (13 to: 20)
		declaredAt: (13 to: 20).! !
!Behavior method!
balance
	^ [
	(accounts
		cover: (11 to: 18)
		declaredAt: (11 to: 18))
		sum: [ :anAsset |
			[
			(anAsset
				cover: (37 to: 43)
				declaredAt: (27 to: 33)) balance ] valueCoveringAll:
				{45 to: 51} ]
		ifEmpty: [ ^ 0 coverAll:
				{65 to: 65} ]] valueCoveringAll:
		{20 to: 23. 54 to: 61}.! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:04:40'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aReceptiveAccount
	[
	(accounts
		cover: (26 to: 33)
		declaredAt: (26 to: 33)) add:
		(aReceptiveAccount
			cover: (40 to: 56)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{35 to: 38}.! !
!Behavior method!
balance
	| balance |
	(balance _ 0 coverAll:
		{33 to: 33})
		cover: (22 to: 28)
		declaredAt: (12 to: 18).
	[
	(transactions
		cover: (37 to: 48)
		declaredAt: (37 to: 48)) do: [ :aTransaction |
		(balance _ [
		(aTransaction
			cover: (83 to: 94)
			declaredAt: (56 to: 67)) addTo:
			(balance
				cover: (72 to: 78)
				declaredAt: (12 to: 18)) ] valueCoveringAll:
			{96 to: 101})
			cover: (103 to: 109)
			declaredAt: (12 to: 18) ]] valueCoveringAll:
		{50 to: 52}.
	^ balance
		cover: (115 to: 121)
		declaredAt: (12 to: 18).! !
!Behavior method!
addTo: aBalance
	^ [
	(aBalance
		cover: (21 to: 28)
		declaredAt: (8 to: 15)) +
		(value
			cover: (32 to: 36)
			declaredAt: (32 to: 36)) ] valueCoveringAll:
		{30 to: 30}.! !

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:04:40'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:04:40'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(accounts
		cover: (32 to: 39)
		declaredAt: (32 to: 39)) anySatisfy: [ :account |
		[
		(account
			cover: (66 to: 72)
			declaredAt: (55 to: 61)) hasRegistered:
			(aTransaction
				cover: (89 to: 100)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{74 to: 87} ]] valueCoveringAll:
		{41 to: 51}.! !

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:04:40'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:04:40'!
PASSED!

----STARTUP---- (20 May 2021 20:08:57) as /Users/dbenitez/uba/1c2021-IS1/Quiz/macos64 - Portfolio 1/CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:13:49'!
test06

	| portfolio account deposit child |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	child add: account.
	
	self assert: (portfolio hasRegistered: deposit).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:14:05' prior: 50860690!
test06

	| portfolio account deposit child |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	child add: account.
	portfolio add: child.
	
	self assert: (portfolio hasRegistered: deposit).

! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:18:36' prior: 50860246 overrides: 50860250!
balance

	^accounts sum: [:anAsset | anAsset balance] ifEmpty: [^0]! !

----SNAPSHOT----(20 May 2021 20:20:09) CuisUniversity-4532.image priorSource: 16920784!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:21:43'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:21:55'!
test07TransactionXXX

	| portfolio account deposit child |
	
	portfolio := Portfolio new.
	child := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	child add: account.
	portfolio add: child.
	
	self assert: (portfolio hasRegistered: deposit).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:22:16' prior: 50860725!
test07TransactionXXX

	| portfolio |
	
	portfolio := Portfolio new.
	
	
	self assert: (portfolio transactions).

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:22:43' prior: 50860738!
test07TransactionXXX

	| portfolio |
	
	portfolio := Portfolio new.
	
	
	self assert: (portfolio transactions) isEmpty.

! !

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:22:46'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:23:00'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:23:16' prior: 50860754!
transactions
	^ OrderedCollection new! !

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:23:17'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:23:17'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:23:29'!
test08TransactionOne

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (portfolio transactions) isEmpty.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:23:47' prior: 50860788!
test08TransactionOne

	| portfolio account child deposit |
	
	portfolio := Portfolio new.
	
	deposit := Deposit register: 100 on: account.
	child add: account.
	portfolio add: child.
	
	self assert: (portfolio hasRegistered: deposit).
	
	self assert: (portfolio transactions) isEmpty.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:24:24' prior: 50860795!
test08TransactionOne

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	deposit := Deposit register: 100 on: account.

	portfolio add: account.
	
	self assert: (portfolio hasRegistered: deposit).
	
	self assert: (portfolio transactions) isEmpty.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:24:43' prior: 50860808!
test08TransactionOne

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	portfolio add: account.
	
	self assert: (portfolio hasRegistered: deposit).
	
	self assert: (portfolio transactions) isEmpty.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:24:52' prior: 50860745!
test07TransactionXXX

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (portfolio transactions) isEmpty.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:25:06' prior: 50860820!
test08TransactionOne

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	portfolio add: account.
	
	self assert: (portfolio hasRegistered: deposit).

! !

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:25:08'!
PASSED!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:25:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:25:33' prior: 50860840!
test08TransactionOne

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	portfolio add: account.
	
	self assert: (portfolio transactions) includes: deposit.

! !

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:25:36'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:26:39' prior: 50860759!
transactions
	^(accounts at: 0) transactions! !

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:26:40'!
ERROR!

(accounts at: 0)!
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:27:13' prior: 50860893!
transactions
	^(accounts at: 1) transactions! !

(accounts at: 1)!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:27:20'!
ERROR!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:27:20'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:27:20'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:27:42' prior: 50860901!
transactions
	^(accounts first) transactions! !

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:27:43'!
ERROR!

accounts first!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:28:16'!
ERROR!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:28:26'!
ERROR!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:28:26'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:28:26'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:29:22' prior: 50860936!
transactions
	
	accounts size > 0 ifTrue: [	^(accounts first) transactions].
	^OrderedCollection new! !

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:29:24'!
PASSED!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:29:29'!
PASSED!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:29:29'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:32:03'!
test09TransactionOne

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

! !

!testRun: #PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:32:07'!
FAILURE!

----SNAPSHOT----(20 May 2021 20:33:29) CuisUniversity-4532.image priorSource: 16930214!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:33:34'!
PASSED!

!testRun: #PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:33:34'!
FAILURE!

!testRun: #PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:33:34'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'DB 5/20/2021 20:35:01' prior: 50860977!
transactions
	
	| transactions |
	transactions := OrderedCollection new.
	accounts do: [	:asset | transactions addAll: asset transactions].
	^transactions! !

!testRun: #PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:35:02'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:36:29' prior: 50861013!
test09TransactionOne

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.
	portfolio2 add: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

! !

!testRun: #PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:36:32'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:36:34'!
PASSED!

!testRun: #PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:36:34'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:36:59'!
test09TransactionMany

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.
	portfolio2 add: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

! !

!methodRemoval: PortfolioTest #test09TransactionOne stamp: 'DB 5/20/2021 20:36:59'!
test09TransactionOne

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.
	portfolio2 add: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:38:06'!
test07EmptyPortfolioReturnsEmptyTransactions

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (portfolio transactions) isEmpty.

! !

!methodRemoval: PortfolioTest #test07TransactionXXX stamp: 'DB 5/20/2021 20:38:06'!
test07TransactionXXX

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (portfolio transactions) isEmpty.

!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:38:53'!
test08PortfolioWithAnAccountIncludesDepositTransaction

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	portfolio add: account.
	
	self assert: (portfolio transactions) includes: deposit.

! !

!methodRemoval: PortfolioTest #test08TransactionOne stamp: 'DB 5/20/2021 20:38:54'!
test08TransactionOne

	| portfolio account deposit |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.

	portfolio add: account.
	
	self assert: (portfolio transactions) includes: deposit.

!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:40:21'!
test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.
	portfolio2 add: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

! !

!methodRemoval: PortfolioTest #test09TransactionMany stamp: 'DB 5/20/2021 20:40:21'!
test09TransactionMany

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.
	portfolio2 add: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

!

----SNAPSHOT----(20 May 2021 20:44:21) CuisUniversity-4532.image priorSource: 16940308!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:45:30'!
test10

	| portfolio account1 account2 deposit1 deposit2 portfolio1 portfolio2 |
	
	portfolio := Portfolio new.
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 100 on: account1.
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 100 on: account2.
	portfolio2 add: account2.

	portfolio add: portfolio1.
	portfolio add: portfolio2.
	
	self assert: (portfolio transactions) includes: deposit1.
	self assert: (portfolio transactions) includes: deposit2.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:48:02' prior: 50861259!
test10

	| p1 a1 d2 a2 |
	
	p1 := Portfolio new.
	
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	
	p1 add: a1.

	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny a1 = a2
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:48:08' prior: 50861281!
test10

	| p1 a1 a2 |
	
	p1 := Portfolio new.
	
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	
	p1 add: a1.

	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny: a1 = a2
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:48:28' prior: 50861291!
test10

	| a1 a2 |
	
	
	
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	


	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny: a1 = a2
! !

!testRun: #PortfolioTest #test10 stamp: 'DB 5/20/2021 20:48:29'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 20:48:29'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 20:48:29'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/20/2021 20:48:30'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'DB 5/20/2021 20:48:30'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:48:37' prior: 50861301!
test10

	| a1 a2 |
		
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	
	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny: a1 = a2
! !

!testRun: #PortfolioTest #test10 stamp: 'DB 5/20/2021 20:50:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:55:47' prior: 50861175!
test07EmptyPortfolioReturnsEmptyTransactions
	
	self assert: (Portfolio new transactions) isEmpty.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:56:57' prior: 50861345!
test10

	| a1 a2 |
		
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	
	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny a1 = a2
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 20:58:02'!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| a1 a2 |
		
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	
	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny a1 = a2
! !

!methodRemoval: PortfolioTest #test10 stamp: 'DB 5/20/2021 20:58:02'!
test10

	| a1 a2 |
		
	a1 := ReceptiveAccount new.
	Deposit register: 100 on: a1.
	
	a2 := ReceptiveAccount new.
	Deposit register: 100 on: a2.
	
	self deny a1 = a2
!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:01:04' prior: 50861371!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account] 
		raise: Error 
		withErrorDescription: [Portfolio cannotAddAccountErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:02:18' prior: 50861389!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self should: [portfolio add: account ] raise: Error  withMessageText: Portfolio cannotAddAccountErrorDescription.	
		! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:02:28' prior: 50861403!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self should: [portfolio add: account ] raise: Error  withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:02:32'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:03:35' prior: 50859949!
add: aReceptiveAccount 


	(accounts includes: aReceptiveAccount) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	accounts add: aReceptiveAccount! !

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:03:37'!
ERROR!
!Portfolio class methodsFor: 'error' stamp: 'DB 5/20/2021 21:03:58'!
cannotAddAccountErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error' stamp: 'DB 5/20/2021 21:04:13' prior: 50861447!
cannotAddAccountErrorDescription
	^'cannot add account'! !

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:04:14'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:04:36' prior: 50861417!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self should: [portfolio add: account ] raise: Error - MessageNotUnderstood withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/20/2021 21:04:37'!
PASSED!

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:04:37'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:04:56' prior: 50861461!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:05:02' prior: 50861514!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/20/2021 21:05:04'!
PASSED!

!testRun: #PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/20/2021 21:05:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'DB 5/20/2021 21:06:32' prior: 50861529!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

----QUIT----(21 May 2021 10:04:24) CuisUniversity-4532.image priorSource: 16947364!

----STARTUP---- (23 May 2021 18:40:12) as /Users/dbenitez/uba/1c2021-IS1/Quiz/macos64 - Portfolio 1/CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 18:43:36'!
test10CannotAddSameAccountTwice

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!methodRemoval: PortfolioTest #test10APortfolioWithAnAccountCannotAddTheSameAccount stamp: 'DB 5/23/2021 18:43:36'!
test10APortfolioWithAnAccountCannotAddTheSameAccount

	| portfolio account |
		
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 18:43:54'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 18:43:59'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 18:43:59'!
PASSED!
!Asset methodsFor: 'testing' stamp: 'DB 5/23/2021 18:46:52'!
hasRegistered: aTransaction
	self subclassResponsibility ! !
!Asset methodsFor: 'testing' stamp: 'DB 5/23/2021 18:48:13'!
transactions

	self subclassResponsibility ! !
!Portfolio methodsFor: 'initialization' stamp: 'DB 5/23/2021 18:50:27' prior: 50859958 overrides: 16896425!
initialize

	accounts := OrderedCollection new.! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 18:50:52'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 18:50:52'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 18:54:45' prior: 50861435!
add: aReceptiveAccount 

	(accounts includes: aReceptiveAccount) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	accounts add: aReceptiveAccount! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 18:54:52'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 18:54:52'!
PASSED!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 18:58:18'!
test11

	| portfolio1 account1 portfolio2 |
		
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	portfolio1 add: account1.
	
	portfolio2 := Portfolio new.
	
	
	self 
		should: [portfolio2 add: portfolio1 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 18:58:59' prior: 50861753!
test11

	| portfolio1 portfolio2 account  |
		
	portfolio1 := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
	
	portfolio2 := Portfolio new.
	portfolio2 add: account.
		
	self 
		should: [portfolio2 add: portfolio1 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:04:21'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:16:02'!
FAILURE!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 19:16:38' prior: 50861767!
test11

	| portfolio1 portfolio2   |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
		
	self 
		should: [portfolio2 add: portfolio1 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:16:39'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:17:17' prior: 50861711!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	
	accounts add: anAsset! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:17:22' prior: 50861801!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:17:28'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:21:08' prior: 50861808!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset includes: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:21:10'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:22:01'!
includes: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset includes: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:22:06' prior: 50861830!
includes: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:22:33' prior: 50861841!
includes: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 19:22:35'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 19:22:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 19:22:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:22:35'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 19:24:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 19:24:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 19:24:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 19:24:49'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'DB 5/23/2021 19:25:41'!
includes: anAsset

	^self = anAsset! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:25:44'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 19:25:44'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 19:25:44'!
ERROR!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 19:25:44'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:25:44'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:25:48'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:26:31'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:27:17'!
ERROR!

(accounts includes: anAsset)!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:27:58' prior: 50861848!
includes: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].! !

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:28:06'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:28:40' prior: 50861977!
includes: anAsset 

	^(accounts includes: anAsset) ! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 19:28:44'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'DB 5/23/2021 19:28:44'!
PASSED!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 19:30:07'!
test11CyclesCannotBeGenerated

	| portfolio1 portfolio2   |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
		
	self 
		should: [portfolio2 add: portfolio1 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!methodRemoval: PortfolioTest #test11 stamp: 'DB 5/23/2021 19:30:07'!
test11

	| portfolio1 portfolio2   |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
		
	self 
		should: [portfolio2 add: portfolio1 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 19:30:36'!
test12

	| portfolio1 portfolio2 |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	portfolio1 add: portfolio2 .
		
	self 
		should: [portfolio2 add: portfolio1 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 19:32:03' prior: 50862050!
test12

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
		
	self 
		should: [portfolio1 add: portfolio2 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:32:05'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:47:23' prior: 50861986!
includes: anAsset 

	^accounts do: [:account | (account includes: anAsset) ifTrue: [^true] ]
	! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:51:11' prior: 50862078!
includes: anAsset 

	^(self = anAsset) or: (accounts anySatisfy: [:asset | asset includes: anAsset] )
	! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:51:13'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:52:07'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:57:07' prior: 50861818!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | asset includes: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	
	accounts add: anAsset! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:57:23' prior: 50862095!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | asset includes: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:57:31'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:57:31'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 19:58:18'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 19:58:18'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:58:18'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:58:23'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 19:59:43' prior: 50862106!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | asset includes: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 19:59:45'!
FAILURE!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'DB 5/23/2021 20:00:15'!
anySatisfy: anAsset

	^self = anAsset! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'DB 5/23/2021 20:00:15' prior: 50859553 overrides: 50861664!
hasRegistered: aTransaction

	^ transactions anySatisfy: aTransaction 
! !

!methodRemoval: ReceptiveAccount #includes: stamp: 'DB 5/23/2021 20:00:15'!
includes: anAsset

	^self = anAsset!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:00:34'!
anySatisfy: anAsset 

	^(self = anAsset) or: (accounts anySatisfy: [:asset | asset includes: anAsset] )
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/23/2021 20:00:34' prior: 50862084!
includes: anAsset 

	^(self = anAsset) or: (accounts anySatisfy: [:asset | asset anySatisfy: anAsset] )
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/23/2021 20:00:34' prior: 50862163!
add: anAsset 

	(accounts anySatisfy: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | asset anySatisfy: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'DB 5/23/2021 20:00:34' prior: 50862194!
anySatisfy: anAsset 

	^(self = anAsset) or: (accounts anySatisfy: [:asset | asset anySatisfy: anAsset] )
	! !

!methodRemoval: Portfolio #includes: stamp: 'DB 5/23/2021 20:00:34'!
includes: anAsset 

	^(self = anAsset) or: (accounts anySatisfy: [:asset | asset anySatisfy: anAsset] )
	!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:01:04'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:01:04'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:01:04'!
ERROR!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:01:04'!
FAILURE!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:01:04'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:01:04'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:01:08'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:01:25'!
FAILURE!

----SNAPSHOT----(23 May 2021 20:01:43) CuisUniversity-4532.image priorSource: 16958195!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:01:44'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:02:21' prior: 50862208!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | asset anySatisfy: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:02:33'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:03:35' prior: 50862284!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:03:42' prior: 50862301!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:03:47'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:03:49'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:03:49'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:03:49'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:03:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:03:52'!
ERROR!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:04:05'!
FAILURE!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:04:57'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:05:07'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:05:51'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'DB 5/23/2021 20:06:39'!
anySatisfy2: anAsset

	^self = anAsset! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'DB 5/23/2021 20:06:39' prior: 50862186 overrides: 50861664!
hasRegistered: aTransaction

	^ transactions anySatisfy2: aTransaction 
! !

!methodRemoval: ReceptiveAccount #anySatisfy: stamp: 'DB 5/23/2021 20:06:39'!
anySatisfy: anAsset

	^self = anAsset!
!ReceptiveAccount methodsFor: 'testing' stamp: 'DB 5/23/2021 20:07:22' prior: 50862392 overrides: 50861664!
hasRegistered: aTransaction

	^ transactions anySatisfy: aTransaction 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'NR 10/17/2019 03:28:43' prior: 50862402 overrides: 50861664!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'DB 5/23/2021 20:08:33'!
anySatisfy: anAsset

	^self = anAsset! !

!methodRemoval: ReceptiveAccount #anySatisfy2: stamp: 'DB 5/23/2021 20:08:33'!
anySatisfy2: anAsset

	^self = anAsset!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:09:22'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:09:22'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:09:22'!
FAILURE!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:09:43'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:09:49'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:09:49'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:09:49'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:11:02' prior: 50862315!
add: anAsset 

	(accounts includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:11:08'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:11:10'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:11:10'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:11:25' prior: 50862508!
add: anAsset 

	
	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:11:27'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:11:27'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:11:48' prior: 50862564!
add: anAsset 
	
	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

----SNAPSHOT----(23 May 2021 20:16:43) CuisUniversity-4532.image priorSource: 16980081!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:16:50'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:16:50'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:20:52' prior: 50862614!
add: anAsset
	
	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !
!Portfolio methodsFor: 'balance' stamp: 'DB 5/23/2021 20:32:58' prior: 50860715 overrides: 50860250!
balance

	^accounts sum: [:anAsset | anAsset balance] ifEmpty: [0]! !

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:33:01'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:33:01'!
PASSED!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:39:51'!
test13

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	account := ReceptiveAccount new.
	portfolio2 add: account.

	portfolio1 add: portfolio2.
	
		
	self 
		should: [portfolio1 add: portfolio2 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:39:59' prior: 50862723!
test13

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	account := ReceptiveAccount new.
	portfolio2 add: account.

	portfolio1 add: portfolio2.
	
		
	self 
		should: [portfolio1 add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:40:00'!
FAILURE!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:41:36' prior: 50862737!
test13

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	account := ReceptiveAccount new.
	portfolio2 add: account.

	portfolio1 add: portfolio2.
	
	"P1 
	  |_ P2 
		|_A"
	
		
	self 
		should: [portfolio1 add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:41:57'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:42:33' prior: 50862667!
add: anAsset
	
	(accounts anySatisfy: [:asset | asset anySatisfy: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:42:38'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:42:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:42:38'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:42:53'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'DB 5/23/2021 20:42:53'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:42:53'!
FAILURE!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:43:46' prior: 50862062!
test12

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	"P1  		P2
	 |_ A 		|_ A
	"
		
	self 
		should: [portfolio1 add: portfolio2 ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:44:28' prior: 50862770!
add: anAsset
	
	(accounts anySatisfy: [:asset | asset anySatisfy: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].

	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].	
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:44:32'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:44:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:44:34'!
PASSED!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:45:12'!
test14

	| portfolio  account |
		
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	"P1 
	  |_ P2 
		|_A"
	
		
	self 
		should: [portfolio add: portfolio ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:45:18'!
PASSED!

!methodRemoval: PortfolioTest #test14 stamp: 'DB 5/23/2021 20:45:26'!
test14

	| portfolio  account |
		
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	"P1 
	  |_ P2 
		|_A"
	
		
	self 
		should: [portfolio add: portfolio ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:47:28'!
test14

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	account := ReceptiveAccount new.
	portfolio1 add: account.

	portfolio1 add: portfolio2.
	
	"P1 
	  |_ P2 
		|_A"
	
		
	self 
		should: [portfolio2 add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:47:30'!
FAILURE!
!PortfolioTest methodsFor: 'add restrictions' stamp: 'DB 5/23/2021 20:48:07' prior: 50863040!
test14

	| portfolio1 portfolio2 account |
		
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	account := ReceptiveAccount new.
	portfolio1 add: account.

	portfolio1 add: portfolio2.
	
	"P1 
	  |_ P2 
	  |_A"
	
		
	self 
		should: [portfolio2 add: account ] 
		raise: Error  
		withMessageText: [Portfolio cannotAddAccountErrorDescription.]
		! !

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHaveZeroAsBalanceWhenCreated stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithAnAccountHasTheSameBalance stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHaveNotAnyTransaction stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithAnReceptiveAccountHaveAccountTransaction stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioReturnsEmptyTransactions stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithAnAccountIncludesDepositTransaction stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountMustIncludesAllTransactions stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test10CannotAddSameAccountTwice stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test11CyclesCannotBeGenerated stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'DB 5/23/2021 20:49:20'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:49:20'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:49:20'!
FAILURE!

(accounts anySatisfy: [:asset | asset anySatisfy: anAsset])!
!Portfolio methodsFor: 'adding' stamp: 'DB 5/23/2021 20:49:47' prior: 50862912!
add: anAsset
	
	(accounts anySatisfy: [:asset | asset anySatisfy: anAsset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].

	(accounts anySatisfy: [:asset | anAsset anySatisfy: asset]) ifTrue: [self error: self class cannotAddAccountErrorDescription].	
	
	(anAsset anySatisfy: self) ifTrue: [self error: self class cannotAddAccountErrorDescription ].
	
	accounts add: anAsset! !

!testRun: #PortfolioTest #test14 stamp: 'DB 5/23/2021 20:51:39'!
FAILURE!

----SNAPSHOT----(23 May 2021 20:51:43) CuisUniversity-4532.image priorSource: 16991181!

----SNAPSHOT----(23 May 2021 21:18:58) CuisUniversity-4532.image priorSource: 17007641!

----QUIT----(23 May 2021 21:19:31) CuisUniversity-4532.image priorSource: 17007730!

----STARTUP---- (23 May 2021 21:23:51) as /Users/dbenitez/uba/1c2021-IS1/Quiz/macos64 - Portfolio 1/CuisUniversity-4532.image!


----QUIT----(23 May 2021 21:24:04) CuisUniversity-4532.image priorSource: 17007819!